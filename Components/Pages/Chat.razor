@using Blazor

@page "/Chat"
@rendermode InteractiveServer

@using GroqApiLibrary;
@using System.Text.Json.Nodes;
@inject SharedStateService StateService

<PageTitle>Chat</PageTitle>

<h3>Ask the assistant about tourist attractions or destinations</h3>

@foreach(var message in messages)
{
    <p class="alert @(message.Role == "User" ? "alert-secondary" : "alert-primary")">
        @message.Role : @message.Message
    </p>
}

<input class="form-control" type="text" placeholder="Your message" @bind="newMessage" /><br>
<button class="btn btn-primary" type="button=" @onclick="AskChat">Send</button>


@code
{
    public List <ChatMessage> messages = new();
    private string? answer;
    public string? newPrompt;
    private string? newMessage;

    private static string apiKey = "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";
    private GroqApiClient groqApi = new GroqApiClient(apiKey);

    private async Task AskChat()
    {
        newPrompt=newMessage;

        if(messages!=null)
        {
            newPrompt="Here is our conversation history: ";
            foreach(var message in messages)
            {
                newPrompt += $"{message.Role}: {message.Message}";
            }

            newPrompt += $"Now I will send you a question. Answer that question {newMessage}";
        }

        var request = new JsonObject
        {
            ["model"] = "mixtral-8x7b-32768",
            ["messages"] = new JsonArray
            {
                new JsonObject
                {
                    ["role"] = "user",
                    ["content"] = newPrompt
                }
            }
        };
        
        var result = await groqApi.CreateChatCompletionAsync(request);
        answer=result?["choices"]?[0]?["message"]?["content"]?.ToString();

        messages.Add(new ChatMessage{Message = newMessage,Role="User"});
        messages.Add(new ChatMessage{Message = answer,Role="Assistant"});
        newMessage=String.Empty;
        StateHasChanged();
    }
}
