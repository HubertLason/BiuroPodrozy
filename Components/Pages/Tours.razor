@page "/tours"
@inject ApplicationDbContext DbContext
@inject SharedStateService StateService
@rendermode InteractiveServer

<PageTitle>Tours</PageTitle>

<div class="tours-container">
    <h1 class="title">Available Tours</h1>

    <p class="subtitle">Select a tour to book:</p>

    <div class="button-group">
        <button class="btn" @onclick="@(() => BookTour("Paris"))">Book Paris Tour</button>
        <button class="btn" @onclick="@(() => BookTour("London"))">Book London Tour</button>
    </div>

    <p class="confirmation">@ConfirmationMessage</p>
</div>

<style>
    /* General Page Styling */
    .tours-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        margin-top: 30px;
    }

    .title {
        font-size: 2rem;
        font-weight: bold;
        margin-bottom: 10px;
        color: #333;
    }

    .subtitle {
        font-size: 1.2rem;
        color: #666;
        margin-bottom: 20px;
    }

    /* Button Group */
    .button-group {
        display: flex;
        gap: 15px;
    }

    /* Buttons */
    .btn {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 12px 20px;
        border-radius: 8px;
        font-size: 16px;
        cursor: pointer;
        transition: background 0.3s ease, transform 0.2s ease;
    }

        .btn:hover {
            background-color: #0056b3;
            transform: scale(1.05);
        }

    /* Confirmation Message */
    .confirmation {
        margin-top: 20px;
        font-size: 1.1rem;
        font-weight: bold;
        color: #28a745;
    }
</style>

@code {
    private string ConfirmationMessage = string.Empty;

    private async Task BookTour(string tourName)
    {
        if (StateService.Account.Username == "Guest")
        {
            ConfirmationMessage = "You must be logged in to book a tour.";
            return;
        }

        try
        {
            var newTour = new BookedTour
                {
                    ClientId = StateService.Account.Id,
                    TourName = tourName
                };

            DbContext.BookedTours.Add(newTour);
            await DbContext.SaveChangesAsync();

            ConfirmationMessage = $"{tourName} Tour booked successfully!";
        }
        catch (Exception ex)
        {
            ConfirmationMessage = $"Error booking tour: {ex.Message}";
        }
    }
}
